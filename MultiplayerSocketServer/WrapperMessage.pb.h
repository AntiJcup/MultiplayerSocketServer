// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WrapperMessage.proto

#ifndef PROTOBUF_INCLUDED_WrapperMessage_2eproto
#define PROTOBUF_INCLUDED_WrapperMessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_WrapperMessage_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_WrapperMessage_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_WrapperMessage_2eproto();
namespace google {
namespace protobuf {
class Authenticate;
class AuthenticateDefaultTypeInternal;
extern AuthenticateDefaultTypeInternal _Authenticate_default_instance_;
class Move;
class MoveDefaultTypeInternal;
extern MoveDefaultTypeInternal _Move_default_instance_;
class WrapperMessage;
class WrapperMessageDefaultTypeInternal;
extern WrapperMessageDefaultTypeInternal _WrapperMessage_default_instance_;
template<> ::google::protobuf::Authenticate* Arena::CreateMaybeMessage<::google::protobuf::Authenticate>(Arena*);
template<> ::google::protobuf::Move* Arena::CreateMaybeMessage<::google::protobuf::Move>(Arena*);
template<> ::google::protobuf::WrapperMessage* Arena::CreateMaybeMessage<::google::protobuf::WrapperMessage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace protobuf {

// ===================================================================

class Authenticate :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.protobuf.Authenticate) */ {
 public:
  Authenticate();
  virtual ~Authenticate();

  Authenticate(const Authenticate& from);

  inline Authenticate& operator=(const Authenticate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Authenticate(Authenticate&& from) noexcept
    : Authenticate() {
    *this = ::std::move(from);
  }

  inline Authenticate& operator=(Authenticate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Authenticate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Authenticate* internal_default_instance() {
    return reinterpret_cast<const Authenticate*>(
               &_Authenticate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Authenticate* other);
  void Swap(Authenticate* other);
  friend void swap(Authenticate& a, Authenticate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Authenticate* New() const final {
    return CreateMaybeMessage<Authenticate>(nullptr);
  }

  Authenticate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Authenticate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Authenticate& from);
  void MergeFrom(const Authenticate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Authenticate* other);
  protected:
  explicit Authenticate(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_token();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_token(
      ::std::string* token);

  // @@protoc_insertion_point(class_scope:google.protobuf.Authenticate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_WrapperMessage_2eproto;
};
// -------------------------------------------------------------------

class Move :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.protobuf.Move) */ {
 public:
  Move();
  virtual ~Move();

  Move(const Move& from);

  inline Move& operator=(const Move& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Move(Move&& from) noexcept
    : Move() {
    *this = ::std::move(from);
  }

  inline Move& operator=(Move&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Move& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Move* internal_default_instance() {
    return reinterpret_cast<const Move*>(
               &_Move_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(Move* other);
  void Swap(Move* other);
  friend void swap(Move& a, Move& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Move* New() const final {
    return CreateMaybeMessage<Move>(nullptr);
  }

  Move* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Move>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Move& from);
  void MergeFrom(const Move& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Move* other);
  protected:
  explicit Move(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:google.protobuf.Move)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float x_;
  float y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_WrapperMessage_2eproto;
};
// -------------------------------------------------------------------

class WrapperMessage :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.protobuf.WrapperMessage) */ {
 public:
  WrapperMessage();
  virtual ~WrapperMessage();

  WrapperMessage(const WrapperMessage& from);

  inline WrapperMessage& operator=(const WrapperMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WrapperMessage(WrapperMessage&& from) noexcept
    : WrapperMessage() {
    *this = ::std::move(from);
  }

  inline WrapperMessage& operator=(WrapperMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WrapperMessage& default_instance();

  enum MsgCase {
    kAuthenticate = 2,
    kMove = 3,
    MSG_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WrapperMessage* internal_default_instance() {
    return reinterpret_cast<const WrapperMessage*>(
               &_WrapperMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(WrapperMessage* other);
  void Swap(WrapperMessage* other);
  friend void swap(WrapperMessage& a, WrapperMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WrapperMessage* New() const final {
    return CreateMaybeMessage<WrapperMessage>(nullptr);
  }

  WrapperMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WrapperMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WrapperMessage& from);
  void MergeFrom(const WrapperMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WrapperMessage* other);
  protected:
  explicit WrapperMessage(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // .google.protobuf.Authenticate authenticate = 2;
  bool has_authenticate() const;
  void clear_authenticate();
  static const int kAuthenticateFieldNumber = 2;
  const ::google::protobuf::Authenticate& authenticate() const;
  ::google::protobuf::Authenticate* release_authenticate();
  ::google::protobuf::Authenticate* mutable_authenticate();
  void set_allocated_authenticate(::google::protobuf::Authenticate* authenticate);
  void unsafe_arena_set_allocated_authenticate(
      ::google::protobuf::Authenticate* authenticate);
  ::google::protobuf::Authenticate* unsafe_arena_release_authenticate();

  // .google.protobuf.Move move = 3;
  bool has_move() const;
  void clear_move();
  static const int kMoveFieldNumber = 3;
  const ::google::protobuf::Move& move() const;
  ::google::protobuf::Move* release_move();
  ::google::protobuf::Move* mutable_move();
  void set_allocated_move(::google::protobuf::Move* move);
  void unsafe_arena_set_allocated_move(
      ::google::protobuf::Move* move);
  ::google::protobuf::Move* unsafe_arena_release_move();

  void clear_msg();
  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:google.protobuf.WrapperMessage)
 private:
  class HasBitSetters;
  void set_has_authenticate();
  void set_has_move();

  inline bool has_msg() const;
  inline void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int32 type_;
  union MsgUnion {
    MsgUnion() {}
    ::google::protobuf::Authenticate* authenticate_;
    ::google::protobuf::Move* move_;
  } msg_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_WrapperMessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Authenticate

// string token = 1;
inline void Authenticate::clear_token() {
  token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Authenticate::token() const {
  // @@protoc_insertion_point(field_get:google.protobuf.Authenticate.token)
  return token_.Get();
}
inline void Authenticate::set_token(const ::std::string& value) {
  
  token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.protobuf.Authenticate.token)
}
#if LANG_CXX11
inline void Authenticate::set_token(::std::string&& value) {
  
  token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.Authenticate.token)
}
#endif
inline void Authenticate::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.protobuf.Authenticate.token)
}
inline void Authenticate::set_token(const char* value,
    size_t size) {
  
  token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.Authenticate.token)
}
inline ::std::string* Authenticate::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.Authenticate.token)
  return token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Authenticate::release_token() {
  // @@protoc_insertion_point(field_release:google.protobuf.Authenticate.token)
  
  return token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Authenticate::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    
  } else {
    
  }
  token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.Authenticate.token)
}
inline ::std::string* Authenticate::unsafe_arena_release_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.protobuf.Authenticate.token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Authenticate::unsafe_arena_set_allocated_token(
    ::std::string* token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (token != nullptr) {
    
  } else {
    
  }
  token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.protobuf.Authenticate.token)
}

// -------------------------------------------------------------------

// Move

// float x = 1;
inline void Move::clear_x() {
  x_ = 0;
}
inline float Move::x() const {
  // @@protoc_insertion_point(field_get:google.protobuf.Move.x)
  return x_;
}
inline void Move::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.Move.x)
}

// float y = 2;
inline void Move::clear_y() {
  y_ = 0;
}
inline float Move::y() const {
  // @@protoc_insertion_point(field_get:google.protobuf.Move.y)
  return y_;
}
inline void Move::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.Move.y)
}

// -------------------------------------------------------------------

// WrapperMessage

// int32 type = 1;
inline void WrapperMessage::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 WrapperMessage::type() const {
  // @@protoc_insertion_point(field_get:google.protobuf.WrapperMessage.type)
  return type_;
}
inline void WrapperMessage::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.WrapperMessage.type)
}

// .google.protobuf.Authenticate authenticate = 2;
inline bool WrapperMessage::has_authenticate() const {
  return msg_case() == kAuthenticate;
}
inline void WrapperMessage::set_has_authenticate() {
  _oneof_case_[0] = kAuthenticate;
}
inline void WrapperMessage::clear_authenticate() {
  if (has_authenticate()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete msg_.authenticate_;
    }
    clear_has_msg();
  }
}
inline ::google::protobuf::Authenticate* WrapperMessage::release_authenticate() {
  // @@protoc_insertion_point(field_release:google.protobuf.WrapperMessage.authenticate)
  if (has_authenticate()) {
    clear_has_msg();
      ::google::protobuf::Authenticate* temp = msg_.authenticate_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    msg_.authenticate_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::protobuf::Authenticate& WrapperMessage::authenticate() const {
  // @@protoc_insertion_point(field_get:google.protobuf.WrapperMessage.authenticate)
  return has_authenticate()
      ? *msg_.authenticate_
      : *reinterpret_cast< ::google::protobuf::Authenticate*>(&::google::protobuf::_Authenticate_default_instance_);
}
inline ::google::protobuf::Authenticate* WrapperMessage::unsafe_arena_release_authenticate() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.protobuf.WrapperMessage.authenticate)
  if (has_authenticate()) {
    clear_has_msg();
    ::google::protobuf::Authenticate* temp = msg_.authenticate_;
    msg_.authenticate_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void WrapperMessage::unsafe_arena_set_allocated_authenticate(::google::protobuf::Authenticate* authenticate) {
  clear_msg();
  if (authenticate) {
    set_has_authenticate();
    msg_.authenticate_ = authenticate;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.protobuf.WrapperMessage.authenticate)
}
inline ::google::protobuf::Authenticate* WrapperMessage::mutable_authenticate() {
  if (!has_authenticate()) {
    clear_msg();
    set_has_authenticate();
    msg_.authenticate_ = CreateMaybeMessage< ::google::protobuf::Authenticate >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.protobuf.WrapperMessage.authenticate)
  return msg_.authenticate_;
}

// .google.protobuf.Move move = 3;
inline bool WrapperMessage::has_move() const {
  return msg_case() == kMove;
}
inline void WrapperMessage::set_has_move() {
  _oneof_case_[0] = kMove;
}
inline void WrapperMessage::clear_move() {
  if (has_move()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete msg_.move_;
    }
    clear_has_msg();
  }
}
inline ::google::protobuf::Move* WrapperMessage::release_move() {
  // @@protoc_insertion_point(field_release:google.protobuf.WrapperMessage.move)
  if (has_move()) {
    clear_has_msg();
      ::google::protobuf::Move* temp = msg_.move_;
    if (GetArenaNoVirtual() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    msg_.move_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::protobuf::Move& WrapperMessage::move() const {
  // @@protoc_insertion_point(field_get:google.protobuf.WrapperMessage.move)
  return has_move()
      ? *msg_.move_
      : *reinterpret_cast< ::google::protobuf::Move*>(&::google::protobuf::_Move_default_instance_);
}
inline ::google::protobuf::Move* WrapperMessage::unsafe_arena_release_move() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.protobuf.WrapperMessage.move)
  if (has_move()) {
    clear_has_msg();
    ::google::protobuf::Move* temp = msg_.move_;
    msg_.move_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void WrapperMessage::unsafe_arena_set_allocated_move(::google::protobuf::Move* move) {
  clear_msg();
  if (move) {
    set_has_move();
    msg_.move_ = move;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.protobuf.WrapperMessage.move)
}
inline ::google::protobuf::Move* WrapperMessage::mutable_move() {
  if (!has_move()) {
    clear_msg();
    set_has_move();
    msg_.move_ = CreateMaybeMessage< ::google::protobuf::Move >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.protobuf.WrapperMessage.move)
  return msg_.move_;
}

inline bool WrapperMessage::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void WrapperMessage::clear_has_msg() {
  _oneof_case_[0] = MSG_NOT_SET;
}
inline WrapperMessage::MsgCase WrapperMessage::msg_case() const {
  return WrapperMessage::MsgCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_WrapperMessage_2eproto
